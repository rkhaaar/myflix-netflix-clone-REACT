{"ast":null,"code":"var _jsxFileName = \"/Users/rubenfernandes/Desktop/myflix/myflix/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n      console.log(list);\n\n      //getting featured \n      let netflixoriginals = list.filter(i => i.slug === 'originals');\n      let randomDisplay = Math.floor(Math.random() * (netflixoriginals[0].items.results.length - 1));\n      let choice = netflixoriginals[0].items.results[randomDisplay];\n      let choiceInfo = await Tmdb.getMovieInfo(choice.id, 'tv');\n      setFeaturedData(choiceInfo);\n      console.log(featuredData);\n    };\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}, \"MkyOymat67q6WVGu9LVfqm2Nr0w=\");","map":{"version":3,"names":["React","useEffect","useState","Tmdb","MovieRow","FeaturedMovie","Header","movieList","setMovieList","featuredData","setFeaturedData","loadAll","list","getHomeList","console","log","netflixoriginals","filter","i","slug","randomDisplay","Math","floor","random","items","results","length","choice","choiceInfo","getMovieInfo","id","map","item","key","title"],"sources":["/Users/rubenfernandes/Desktop/myflix/myflix/src/App.js"],"sourcesContent":["import React, {useEffect,useState} from 'react';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport './App.css';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header'\n\nexport default ()=>{\nconst[movieList,setMovieList] = useState([]);\nconst [featuredData, setFeaturedData]= useState(null);\n\n  useEffect(()=>{\n    const loadAll= async ()=>{\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);   \n      console.log(list);\n\n      //getting featured \n      let netflixoriginals = list.filter(i=>i.slug==='originals');\n      let randomDisplay = Math.floor(Math.random()*(netflixoriginals[0].items.results.length-1));\n      let choice = netflixoriginals[0].items.results[randomDisplay];\n\n      let choiceInfo = await Tmdb.getMovieInfo(choice.id, 'tv');\n      setFeaturedData(choiceInfo);\n      console.log(featuredData)\n     }\n    loadAll();\n  },[])\nreturn (\n  <div className=\"page\">\n    {featuredData && <FeaturedMovie item={featuredData}/>}\n<section className=\"lists\">\n  {movieList.map((item,key)=>(\n      <MovieRow key={key} title ={item.title} items = {item.items}/>\n  ))}\n</section>\n\n  </div>\n)\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAC/C,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAClB,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AAAA;AAExC,kBAAe,MAAI;EAAA;EACnB,MAAK,CAACC,SAAS,EAACC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAER,QAAQ,CAAC,IAAI,CAAC;EAEnDD,SAAS,CAAC,MAAI;IACZ,MAAMU,OAAO,GAAE,YAAU;MACvB,IAAIC,IAAI,GAAG,MAAMT,IAAI,CAACU,WAAW,EAAE;MACnCL,YAAY,CAACI,IAAI,CAAC;MAClBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;;MAEjB;MACA,IAAII,gBAAgB,GAAGJ,IAAI,CAACK,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,KAAG,WAAW,CAAC;MAC3D,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAEP,gBAAgB,CAAC,CAAC,CAAC,CAACQ,KAAK,CAACC,OAAO,CAACC,MAAM,GAAC,CAAC,CAAC,CAAC;MAC1F,IAAIC,MAAM,GAAGX,gBAAgB,CAAC,CAAC,CAAC,CAACQ,KAAK,CAACC,OAAO,CAACL,aAAa,CAAC;MAE7D,IAAIQ,UAAU,GAAG,MAAMzB,IAAI,CAAC0B,YAAY,CAACF,MAAM,CAACG,EAAE,EAAE,IAAI,CAAC;MACzDpB,eAAe,CAACkB,UAAU,CAAC;MAC3Bd,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;IAC1B,CAAC;IACFE,OAAO,EAAE;EACX,CAAC,EAAC,EAAE,CAAC;EACP,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,WAClBF,YAAY,iBAAI,QAAC,aAAa;MAAC,IAAI,EAAEA;IAAa;MAAA;MAAA;MAAA;IAAA,QAAE,eACzD;MAAS,SAAS,EAAC,OAAO;MAAA,UACvBF,SAAS,CAACwB,GAAG,CAAC,CAACC,IAAI,EAACC,GAAG,kBACpB,QAAC,QAAQ;QAAW,KAAK,EAAGD,IAAI,CAACE,KAAM;QAAC,KAAK,EAAIF,IAAI,CAACR;MAAM,GAA7CS,GAAG;QAAA;QAAA;QAAA;MAAA,QACrB;IAAC;MAAA;MAAA;MAAA;IAAA,QACM;EAAA;IAAA;IAAA;IAAA;EAAA,QAEF;AAER,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}